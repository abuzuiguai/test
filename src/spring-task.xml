<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p" xmlns:context="http://www.springframework.org/schema/context" xsi:schemaLocation="http://www.springframework.org/schema/beans 
http://www.springframework.org/schema/beans/spring-beans-3.1.xsd 
http://www.springframework.org/schema/context 
http://www.springframework.org/schema/context/spring-context-3.1.xsd 
http://www.springframework.org/schema/mvc 
http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd">
	
<!-- 	<bean id="scheduler" class="org.springframework.scheduling.quartz.SchedulerFactoryBean" lazy-init="false">  
        <property name="triggers">  
            <list>  
            </list>  
        </property>  
    </bean> -->
    
    <bean id="scheduler" class="org.springframework.scheduling.quartz.SchedulerFactoryBean" lazy-init="false">  
        <property name="triggers">  
            <list>  
            	<!--<ref bean="misTrigger"/> -->
            </list>  
        </property>  
    </bean>
    <bean id="misTrigger" class="org.springframework.scheduling.quartz.CronTriggerBean">  
       <property name="jobDetail" ref="misJobDetail"/>  
       <property name="cronExpression" value="11 18 14 ? * *"/>
	</bean> 
	<bean id="misJobDetail" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">   
        <property name="targetObject" ref="misJob"/>  
        <property name="targetMethod" value="execute"/>  
        <property name="concurrent" value="false"/>
        <!-- 是否允许任务并发执行。当值为false时，表示必须等到前一个线程处理完毕后才再启一个新的线程 -->  
	</bean>
	
	<bean id="misJob" class="com.ht.calltree.inter.mis.job.MisJob"/>
    
   <!--<bean class="org.springframework.scheduling.quartz.SchedulerFactoryBean">  
      <property name="triggers">  
          <list>  
             <ref bean="testTrigger"/>  
          </list>  
      </property>  
      <property name="autoStartup" value="true"/>  
	</bean> 
	
	<bean id="testTrigger" class="org.springframework.scheduling.quartz.CronTriggerBean">  
       <property name="jobDetail" ref="testJobDetail"/>  
       <property name="cronExpression" value="*/1 * * * * ?"/>
    </bean>
    
	<bean id="testJobDetail" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">   
        <property name="targetObject" ref="testJob"/>  
        <property name="targetMethod" value="execute"/>  
        <property name="concurrent" value="false"/>
   </bean> 
   
   <bean id="testJob" class="com.ht.calltree.task.TestJob"/> --> 

</beans>